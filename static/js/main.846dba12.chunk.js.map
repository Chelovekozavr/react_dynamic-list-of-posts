{"version":3,"sources":["components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectedPostId","setSelectedPostId","className","map","userId","title","id","key","type","onClick","defaultProps","BASE_URL","getPostComments","a","fetch","response","json","result","data","comments","filter","comment","postId","NewCommentForm","setComments","useState","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","options","method","JSON","stringify","addComment","then","placeholder","value","onChange","target","getPosts","post","getPostDetails","PostDetails","selectedPost","setSelectedPost","commentsVisibility","setCommentsVisibility","useEffect","postResponse","commentsResponse","fetchPostDetails","length","App","setPosts","handleChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.846dba12.chunk.js","sourcesContent":["\nimport React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, selectedPostId, setSelectedPostId }) => (\n  <div className=\"PostsList\">\n\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(({ userId, title, id }) => (\n        <li\n          className=\"PostsList__item\"\n          key={id}\n        >\n          <div>\n            <b>\n              [User #\n              {userId}\n              ]:\n              {' '}\n            </b>\n            {title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => {\n              selectedPostId === id\n                ? setSelectedPostId()\n                : setSelectedPostId(id);\n            }}\n          >\n            {selectedPostId === id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n  selectedPostId: PropTypes.number,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  selectedPostId: 0,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport async function getPostComments(id) {\n  const response = await fetch(`${BASE_URL}`);\n  const result = await response.json();\n  const comments = await result.data;\n\n  return comments.filter(comment => comment.postId === +id);\n}\n\nexport function addComment(comment) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(comment),\n  };\n\n  return fetch(`${BASE_URL}`, options);\n}\n\nexport function deleteComment(comment) {\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(`${BASE_URL}/${comment}`, options);\n}\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { getPostComments, addComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!name || !email || !body) {\n      return;\n    }\n\n    const comment = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    addComment(comment)\n      .then(() => getPostComments(postId))\n      .then(setComments);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function getPosts(id) {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const result = await response.json();\n  const posts = await result.data;\n\n  if (id) {\n    return posts.filter(post => post.userId === +id);\n  }\n\n  return posts;\n}\n\nexport async function getPostDetails(postId) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const result = await response.json();\n\n  return result.data;\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostDetails.scss';\n\nimport { NewCommentForm } from '../NewCommentForm';\n\nimport { getPostDetails } from '../../api/posts';\nimport { deleteComment, getPostComments } from '../../api/comments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [selectedPost, setSelectedPost] = useState([]);\n  const [commentsVisibility, setCommentsVisibility] = useState(true);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const fetchPostDetails = async() => {\n      const postResponse = await getPostDetails(selectedPostId);\n      const commentsResponse = await getPostComments(selectedPostId);\n\n      setSelectedPost(postResponse);\n      setComments(commentsResponse);\n    };\n\n    fetchPostDetails();\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <h3>{selectedPost.title}</h3>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setCommentsVisibility(!commentsVisibility);\n          }}\n        >\n          {`${commentsVisibility\n            ? 'Hide' : 'Show'} ${comments.length} comments`\n          }\n        </button>\n        {commentsVisibility && (\n          <ul className=\"PostDetails__list\">\n\n            {comments.map(({ id, body }) => (\n\n              <li\n                className=\"PostDetails__list-item\"\n                key={id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(id)\n                      .then(() => getPostComments(selectedPostId))\n                      .then(setComments);\n                  }}\n                >\n                  X\n                </button>\n                <p>{body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n\n  useEffect(() => {\n    getPosts()\n      .then(result => setPosts(result));\n  }, []);\n\n  const handleChange = (event) => {\n    setSelectedPostId();\n    getPosts(event.target.value)\n      .then(result => setPosts(result));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => handleChange(event)}\n          >\n            <option value=\"\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && (\n            <PostDetails selectedPostId={selectedPostId} />\n          )}\n\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}